전체 프로젝트 공유 : https://bit.ly/2ZaI9sJ 
> 0. 학번 : 2202

[프로젝트 1 : 예외가 있는 원자와 이온의 오비탈]
1)연구소 이름 : 문뚜 연구소
2)연구소가 해결하려는 문제 : 예외가 있는 원자와 이온의 오비탈을 어려워 하는 학생들의 문제
3)연구소의 깃헙 링크 : https://github.com/myj072450/Orbital-arragement-of-atoms-and-ions/tree/master
4)내가 기여한 내용

a= int(input("원자의 원자번호를 입력해주세요."))
# 원자의 원래 전자 수를 입력받는다. 

orbital = Stack() #Stack 관련 정의 코드는 미리 실행시켜 둠
b=input("이온의 가수를 부호를 포함하여 입력해주세요.")
# 이온의 가수를 입력받아 원자, 이온의 전자수를 최종적으로 결정한다. 

if a==24:
    print('1s*2 2s*2 2p*6 3s*2 3p*6 4s*1 3d*5')
if a==29:
    print('1s*2 2s*2 2p*6 3s*2 3p*6 4s*1 3d*10')
# 전자의 수가 24, 29일 때 3d 오비탈에 예외가 생기는 경우를 미리 설정한다. 

else:
    if b=='+3':
        a=a-3
    if b=='+2':
        a=a-2
    if b=='+1':
        a=a-1
    if b=='0':
        a=a
    if b=='-1':
        a=a+1
    if b=='-2':
        a=a+2
    if b=='-3':
        a=a+3
    else: 
        print("+3부터 -3까지의 숫자 중 부호를 포함하여 다시 입력해주세요.")
if a==29:
    print('1s*2 2s*2 2p*6 3s*2 3p*6 4s*1 3d*10')
if a==24:
    print('1s*2 2s*2 2p*6 3s*2 3p*6 4s*1 3d*5')
# 예외적인 전자배치에 대해 미리 설정해둔다. 

if a!=24 and a!=29:
    while a :
        if 1<=a<3:
             orbital.push('1s')
        if 3<=a<5:
             orbital.push('2s')
        if 5<=a<11:
             orbital.push('2p')
        if 11<=a<13:
             orbital.push('3s')
        if 13<=a<19:
             orbital.push('3p')
        if 19<=a<21:
             orbital.push('4s')
        if 21<=a<31:
            orbital.push('3d')
        if 31<=a<37:
            orbital.push('4p')
        if b==0:
            break
        b=b-1
# 이온의 가수만큼 전자를 추가한다. 양이온에 대한 코드는 없는것이 단점이다. 

5)내가 기여한 내용에 대한 설명
-사용자가 코드를 쉽게 사용할 수 있도록 input에 부연설명을 덧붙였다. 
-주석을 추가하였다.
-코드에 있는 화학개념에 관련된 오류를 수정하였다. 
6)내가 기여한 내용의 반영 여부 : (O,X 중 선택해주세요)

[프로젝트 2 : 몬티홀 문제 시각화]
1)연구소 이름 : LTHS LAB
2)연구소가 해결하려는 문제 : 몬티홀 문제에 대해 이해하지 못하는 사람들을 위해 시각화하려고 한다. 
3)연구소의 깃헙 링크 : https://github.com/hsguy0608/Real-Monty-hall/tree/master
4)내가 기여한 내용

# 몬티홀 딜레마
# 퀴즈 프로그램에서 우승한 당신은 n개의 문 중에서 하나를 골라 그 문 뒤에 있는 상품을 받을 수 있다.
# n개의 문 중에서 1개의 문 뒤에는 고급 승용차가, 나머지 문 뒤에는 염소가 있다. 
# 당신은 하나의 문을 골라 사회자에게 말해주었고, 사회자는 당신이 고르지 않은 문들 중에서 염소가 있는 문 하나를 열어 보여준다.
# 이 때 당신은 선택을 바꾸는 것이 현명한가, 바꾸지 않는 것이 현명한가?
# 정답은 '바꾸는 것이 현명하다' 이다. 

a = []
b = []
c = []
d = []
e = []
chs = 0
chf = 0
nchs = 0
nchf = 0
p = 0
import random
while p < 1000000 :
    r = random.randint(1,5)
    if r == 1 :
        a.append(0)
    elif r == 2 :
        b.append(0)
    elif r == 4 :
        d.append(0)
    elif r == 5 :
        e.append(0) 
    else:
        c.append(0)
# 0 = 차 위치, 승용차의 위치를 랜덤함수를 이용하여 무작위로 결정한다.    

    z = random.randint(1,5)
    if z == 1 :
        a.append(1)
    elif z == 2 :              
        b.append(1)
    elif z == 4 :
        d.append(1)
    elif z == 5 :
        e.append(1)
    else:
        c.append(1)
 # 1 = 처음 고른 위치, 당신이 처음 고른 문의 번호를 무작위로 결정한다. 
 
    if len(a) == 2 or len(b) == 2 or len(c) == 2 or len(d) == 2 or len(e) == 2:   
# 0과 1이 둘 다 있으면 승용차의 위치를 고른것이다. 

5)내가 기여한 내용에 대한 설명
- 몬티홀 딜레마에 대한 문제 설명
- 코드 오류 및 순서 수정
- 주석 
6)내가 기여한 내용의 반영 여부 : (O,X 중 선택해주세요)


[프로젝트 3 : 산염기, 산화환원 적정실험 매뉴얼 프로그램]
1)연구소 이름 : 노서John. LAB.
2)연구소가 해결하려는 문제 : 산&염기, 산화&환원 적정 실험 안내 프로그램
3)연구소의 깃헙 링크 : https://github.com/bugs1015/2019-1-/blob/master/2019%202216%202202.ipynb
4)내가 기여한 내용

import time  #실험 과정에서 시간차를 두고 출력하기 위해 시간함수 도입
e = input("산화환원 적정과 산염기 적정 중 진행하고자 하는 실험을 선택하세요.")  #산화환원 적정실험에 대한 기능, 산염기 적정실험에 대한 기능중 선택

sa = ["황산", "염산", "질산", "염소산"]  #강산 리스트
wa = ["아세트산", "아염소산", "하이퍼아염소산", "암모늄이온"]  #약산 리스트
sb = ["수산화나트륨", "수산화칼슘", "수산화칼륨"]  #강염기 리스트
wb = ["암모니아"]  #약염기 리스트

if e == "산염기" or e == "산염기 적정" or e == "산염기적정" :  #사용자가 산염기 적정 실험을 선택하면
    a = input("실험에 사용할 산의 화학식명을 입력해주세요. 예: 염산, 황산, 질산 등")  #적정실험에 사용할 산 표준용액의 종류를 입력받고
    if a == "염산" or a == "질산" or a == "하이퍼아염소산" or a == "아세트산" or a == "암모늄이온"++++++++++++++++++++++ :
        na = 1
    elif a == "황산" or a == "아염소산" :
        na = 2
    elif a == "염소산" :
        na = 3
    #입력받은 산의 가수(na)값을 결정한다.
        
    b = input("실험에 사용할 염기의 화학식명을 입력해주세요. 예: 수산화나트륨, 수산화칼슘, 수산화칼륨 등")  #적정실험에 사용할 염기 용액의 종류를 입력받고
    if b == "수산화칼슘" :
        nb = 2    
    elif b == "수산화나트륨" or b == "수산화칼륨" or b == "암모니아" :
        nb = 1
    #입력받은 염기의 가수(nb)값을 결정한다.
    
    if a in sa and b in sb :
        In = "BTB용액"
    elif a in sa and b in wb :
        In = "메틸오렌지"
    elif a in wa and b in sb :
        In = "페놀프탈레인"
    elif a in wa and b in wb :
        print("약산과 약염기의 적정은 적절하지 않습니다.")
    #적정에 사용하는 산과 염기의 강산, 약산, 강염기, 약염기 조합에 따라 적절한 지시약을 결정하거나 혹은 해당 조합이 적정실험에 적절하지 않음을 알려준다. 
        
    if a not in wa and b not in wb :
        #불가능한 약산, 약염기 적정을 제외한 나머지 경우에 대해서 실험 준비물을 알려준다.
        msg = "실험에 필요한 준비물은 증류수, 피펫, 뷰렛, 삼각플라스크, 교반기, 마그내틱 바, 유리막대, 약포지, 약숟가락, 전자저울", a, b, In, "입니다. 준비가 완료되면 실험시작을 입력해주세요!"
        ex = input(msg)  #input함수 내에 표시할 것을 치환(?)
        if ex == "실험시작" :
            intro = input("지금부터 실험과정이 표시됩니다. 실험의 다음 단계로 넘어가고 싶으면 다음이라고 입력해주세요.")
            time.sleep(1)
            if intro == "다음" :
                n1 = input("피펫을 이용하여 산 표준 용액을 원하는 부피만큼 정확히 취하여 여유가 있는 크기의 삼각 플라스크에 담고 지시약을 두세방울 떨어뜨려주세요.")
                time.sleep(1)
                if n1 == "다음" :
                    n2 = input("사용할 미지농도의 염기 용액을 뷰렛에 담고 뷰렛을 삼각플라스크 위쪽으로 고정시켜주세요.")
                    time.sleep(1)
                    if n2 == "다음" :
                        bv = input("염기 용액을 천천히 떨어뜨리면서 당량점을 찾아주세요. 소모된 염기의 부피를 입력하세요.")
                        time.sleep(1)
        #실제 실험을 하듯이 '다음'을 입력하면 시간차를 두고 실험과정을 출력하여 실험을 진행할 수 있도록 하고 실험에서 소모된 염기의 부피를 입력받는다. 
        
                        ac = input("사용한 산 표준용액의 몰농도를 단위없이 입력해주세요.")
                        av = input("사용한 산 표준용액의 mL부피를 단위없이 입력해주세요.")
                        bc = int(ac) * int(av) * int(na) / int(bv)
                        bcc = int(bc) / int(nb)
                        # nMV = n'M'V' 식을 통해 사용한 염기용액의 몰농도를 계산하여 출력하고 실험을 마무리한다. 
                        print("사용한 염기 수용액의 몰농도는", int(bcc), "입니다. 사용하고 남은 산과 염기 용액은 반드시 폐수통에 버려주시기 바랍니다.")
                        

if e == "산화환원" or e == "산화환원 적정" or e == "산화환원적정" :  #사용자가 산화환원 적정실험을 선택하면
    a1 = input("산화되는 물질-환원제의 산화 전 산화수를 입력해주세요.")
    a2 = input("산화되는 물질-환원제의 산화 후 산화수를 입력해주세요.")
    da = int(a2) - int(a1)
    #반응 전후의 산화수를 입력받아 산화반쪽 반응을 통해 이동하는 전자수를 파악한다. 
    b1 = input("환원되는 물질-산화제의 산화 전 산화수를 입력해주세요.")
    b2 = input("환원되는 물질-산화젵의 산화 후 산화수를 입력해주세요.")
    db = int(b1) - int(b2)
    #반응 전후의 산화수를 입력받아 환원반쪽 반응을 통해 이동하는 전자수를 파악한다. 
    tt = "산화되는 물질과 환원되는 물질의 반응 몰수 비는", int(db),"대", int(da), "입니다. 실험을 시작하려면 시작을 입력해주세요."
    #계산한 산화수 변화를 통해 물질의 반응 몰수비를 계산하여 출력하고 실험을 시작한다. 
    exst = input(tt)
    if exst == "시작" :
        msg = "실험에 필요한 준비물은 증류수, 피펫, 뷰렛, 삼각플라스크, 교반기, 마그내틱 바, 유리막대, 약포지, 약숟가락, 전자저울, 산화제 용액, 환원제 용액, 산화환원 지시약입니다. 준비가 완료되면 실험시작을 입력해주세요!"
        ex = input(msg)  #input함수 내에 표시할 것을 치환(?)
        if ex == "실험시작" :
            intro = input("지금부터 실험과정이 표시됩니다. 실험의 다음 단계로 넘어가고 싶으면 다음이라고 입력해주세요.")
            time.sleep(1)
            if intro == "다음" :
                n1 = input("피펫을 이용하여 산화제 표준 용액을 원하는 부피만큼 정확히 취하여 여유가 있는 크기의 삼각 플라스크에 담고 지시약을 두세방울 떨어뜨려주세요.")
                time.sleep(1)
                if n1 == "다음" :
                    n2 = input("사용할 미지농도의 환원제 용액을 뷰렛에 담고 뷰렛을 삼각플라스크 위쪽으로 고정시켜주세요.")
                    time.sleep(1)
                    if n2 == "다음" :
                        bv = input("환원제 용액을 천천히 떨어뜨리면서 지시약의 색이 변하는 당량점을 찾아주세요. 소모된 환원제의 부피를 입력하세요.")
                        time.sleep(1)
            #실제 실험을 하듯이 '다음'을 입력하면 시간차를 두고 실험과정을 출력하여 실험을 진행할 수 있도록 하고 실험에서 소모된 환원제 용액의 부피를 입력받는다. 

                        ac = input("사용한 산화제 표준용액의 몰농도를 단위없이 입력해주세요.")
                        av = input("사용한 산화제 표준용액의 mL부피를 단위없이 입력해주세요.")
                        bc = int(ac) * int(av) / int(bv)
                        x = int(bc) * int(db) / int(da)
                        print("사용한 환원제 수용액의 몰농도는", int(x), "입니다. 사용하고 남은 용액은 반드시 폐수통에 버려주시기 바랍니다.")
                        #nMV=n'M'V'식을 이용한 미지 수용액의 몰농도 계산 및 
5)내가 기여한 내용에 대한 설명
- 코드 일부 수정
- 주석 
6)내가 기여한 내용의 반영 여부 : (O,X 중 선택해주세요)
