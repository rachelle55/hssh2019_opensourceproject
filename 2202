전체 프로젝트 공유 : https://bit.ly/2ZaI9sJ 
> 0. 학번 : 2202

[프로젝트 1 : 예외가 있는 원자와 이온의 오비탈]
1)연구소 이름 : 문뚜 연구소
2)연구소가 해결하려는 문제 : 예외가 있는 원자와 이온의 오비탈을 어려워 하는 학생들의 문제
3)연구소의 깃헙 링크 : https://github.com/myj072450/Orbital-arragement-of-atoms-and-ions/tree/master
4)내가 기여한 내용

a= int(input("원자의 원자번호를 입력해주세요."))
# 원자의 원래 전자 수를 입력받는다. 

orbital = Stack() #Stack 관련 정의 코드는 미리 실행시켜 둠
b=input("이온의 가수를 부호를 포함하여 입력해주세요.")
# 이온의 가수를 입력받아 원자, 이온의 전자수를 최종적으로 결정한다. 

if a==24:
    print('1s*2 2s*2 2p*6 3s*2 3p*6 4s*1 3d*5')
if a==29:
    print('1s*2 2s*2 2p*6 3s*2 3p*6 4s*1 3d*10')
# 전자의 수가 24, 29일 때 3d 오비탈에 예외가 생기는 경우를 미리 설정한다. 

else:
    if b=='+3':
        a=a-3
    if b=='+2':
        a=a-2
    if b=='+1':
        a=a-1
    if b=='0':
        a=a
    if b=='-1':
        a=a+1
    if b=='-2':
        a=a+2
    if b=='-3':
        a=a+3
    else: 
        print("+3부터 -3까지의 숫자 중 부호를 포함하여 다시 입력해주세요.")
if a==29:
    print('1s*2 2s*2 2p*6 3s*2 3p*6 4s*1 3d*10')
if a==24:
    print('1s*2 2s*2 2p*6 3s*2 3p*6 4s*1 3d*5')
# 예외적인 전자배치에 대해 미리 설정해둔다. 

if a!=24 and a!=29:
    while a :
        if 1<=a<3:
             orbital.push('1s')
        if 3<=a<5:
             orbital.push('2s')
        if 5<=a<11:
             orbital.push('2p')
        if 11<=a<13:
             orbital.push('3s')
        if 13<=a<19:
             orbital.push('3p')
        if 19<=a<21:
             orbital.push('4s')
        if 21<=a<31:
            orbital.push('3d')
        if 31<=a<37:
            orbital.push('4p')
        if b==0:
            break
        b=b-1
# 이온의 가수만큼 전자를 추가한다. 양이온에 대한 코드는 없는것이 단점이다. 

5)내가 기여한 내용에 대한 설명
-사용자가 코드를 쉽게 사용할 수 있도록 input에 부연설명을 덧붙였다. 
-주석을 추가하였다.
-코드에 있는 화학개념에 관련된 오류를 수정하였다. 
6)내가 기여한 내용의 반영 여부 : (O,X 중 선택해주세요)

[프로젝트 2 : 몬티홀 문제 시각화]
1)연구소 이름 : LTHS LAB
2)연구소가 해결하려는 문제 : 몬티홀 문제에 대해 이해하지 못하는 사람들을 위해 시각화하려고 한다. 
3)연구소의 깃헙 링크 : https://github.com/hsguy0608/Real-Monty-hall/tree/master
4)내가 기여한 내용

# 몬티홀 딜레마
# 퀴즈 프로그램에서 우승한 당신은 n개의 문 중에서 하나를 골라 그 문 뒤에 있는 상품을 받을 수 있다.
# n개의 문 중에서 1개의 문 뒤에는 고급 승용차가, 나머지 문 뒤에는 염소가 있다. 
# 당신은 하나의 문을 골라 사회자에게 말해주었고, 사회자는 당신이 고르지 않은 문들 중에서 염소가 있는 문 하나를 열어 보여준다.
# 이 때 당신은 선택을 바꾸는 것이 현명한가, 바꾸지 않는 것이 현명한가?
# 정답은 '바꾸는 것이 현명하다' 이다. 

a = []
b = []
c = []
d = []
e = []
chs = 0
chf = 0
nchs = 0
nchf = 0
p = 0
import random
while p < 1000000 :
    r = random.randint(1,5)
    if r == 1 :
        a.append(0)
    elif r == 2 :
        b.append(0)
    elif r == 4 :
        d.append(0)
    elif r == 5 :
        e.append(0) 
    else:
        c.append(0)
# 0 = 차 위치, 승용차의 위치를 랜덤함수를 이용하여 무작위로 결정한다.    

    z = random.randint(1,5)
    if z == 1 :
        a.append(1)
    elif z == 2 :              
        b.append(1)
    elif z == 4 :
        d.append(1)
    elif z == 5 :
        e.append(1)
    else:
        c.append(1)
 # 1 = 처음 고른 위치, 당신이 처음 고른 문의 번호를 무작위로 결정한다. 
 
    if len(a) == 2 or len(b) == 2 or len(c) == 2 or len(d) == 2 or len(e) == 2:   
# 0과 1이 둘 다 있으면 승용차의 위치를 고른것이다. 

5)내가 기여한 내용에 대한 설명
- 몬티홀 딜레마에 대한 문제 설명
- 코드 오류 및 순서 수정
- 주석 
6)내가 기여한 내용의 반영 여부 : (O,X 중 선택해주세요)

[프로젝트 3 : 길 찾기 문제 해결 프로그램의 코드 오류 수정]
1)연구소 이름 : (공유 파일에서 복붙하세요)
2)연구소가 해결하려는 문제 : (공유 파일에서 복붙하세요)
3)연구소의 깃헙 링크 : (공유 파일에서 복붙하세요)
4)내가 기여한 내용
(코드, 주석, 문서화 등 내가 기여한 내용을 복붙해주세요)
5)내가 기여한 내용에 대한 설명
(자신이 어떤 기여를 한 것인지 설명해주세요)
6)내가 기여한 내용의 반영 여부 : (O,X 중 선택해주세요)
